# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type AffectedRowsOutput {
  count: Int!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

type DecisionTree {
  _count: DecisionTreeCount
  createdAt: DateTime!
  name: String!
  status: TreeStatus!
  treeData: JSON
  updatedAt: DateTime!
  uuid: String!
  yDocument: String
}

type DecisionTreeCount {
  Tags: Int!
  publishedTrees: Int!
}

input DecisionTreeCreateInput {
  language: String
  name: String!
}

input DecisionTreeOrderByWithRelationInput {
  createdAt: SortOrder
  language: SortOrder
  name: SortOrder
  tags: SortOrder
  updatedAt: SortOrder
  uuid: SortOrder
}

enum DecisionTreeScalarFieldEnum {
  createdAt
  name
  ownerUuid
  status
  treeData
  updatedAt
  uuid
  yDocument
}

input DecisionTreeUpdateInput {
  language: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  status: EnumTreeStatusFieldUpdateOperationsInput
}

input DecisionTreeUpdateManyMutationInput {
  language: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  status: EnumTreeStatusFieldUpdateOperationsInput
}

input DecisionTreeWhereInput {
  AND: [DecisionTreeWhereInput!]
  NOT: [DecisionTreeWhereInput!]
  OR: [DecisionTreeWhereInput!]
  createdAt: DateTimeFilter
  language: StringFilter
  name: StringFilter
  status: EnumTreeStatusFilter
  updatedAt: DateTimeFilter
  uuid: StringFilter
}

input DecisionTreeWhereUniqueInput {
  uuid: String
}

input EnumTreeStatusFieldUpdateOperationsInput {
  set: TreeStatus
}

input EnumTreeStatusFilter {
  equals: TreeStatus
  in: [TreeStatus!]
  not: NestedEnumTreeStatusFilter
  notIn: [TreeStatus!]
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Mutation {
  createDecisionTree(data: DecisionTreeCreateInput!): DecisionTree!
  deleteDecisionTree(where: DecisionTreeWhereUniqueInput!): DecisionTree
  deleteManyDecisionTree(where: DecisionTreeWhereInput): AffectedRowsOutput!
  publishDecisionTree(where: DecisionTreeWhereUniqueInput!): DecisionTree!
  updateDecisionTree(data: DecisionTreeUpdateInput!, where: DecisionTreeWhereUniqueInput!): DecisionTree
  updateManyDecisionTree(data: DecisionTreeUpdateManyMutationInput!, where: DecisionTreeWhereInput): AffectedRowsOutput!
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedEnumTreeStatusFilter {
  equals: TreeStatus
  in: [TreeStatus!]
  not: NestedEnumTreeStatusFilter
  notIn: [TreeStatus!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

type Query {
  decisionTree(where: DecisionTreeWhereUniqueInput!): DecisionTree
  decisionTrees(cursor: DecisionTreeWhereUniqueInput, distinct: [DecisionTreeScalarFieldEnum!], orderBy: [DecisionTreeOrderByWithRelationInput!], skip: Int, take: Int, where: DecisionTreeWhereInput): [DecisionTree!]!
}

enum QueryMode {
  default
  insensitive
}

enum SortOrder {
  asc
  desc
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

enum TreeStatus {
  ACTIVE
  ARCHIVED
}
