name: Deploy Preview
on:
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  FLY_ORG: open-decision
  FLY_REGION: fra
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
  ADMIN_ACCOUNT_WHITELIST: ${{ secrets.ADMIN_ACCOUNT_WHITELIST }}
  DEV_ACCOUNT_WHITELIST: ${{ secrets.DEV_ACCOUNT_WHITELIST }}
  EMAIL_FROM_ADDRESS: ${{ secrets.EMAIL_FROM_ADDRESS }}
  FEATURE_WHITELIST: ${{ secrets.FEATURE_WHITELIST }}
  PUBLIC_API_DOCUMENTATION: ${{ secrets.PUBLIC_API_DOCUMENTATION }}
  REFRESH_TOKEN_SECRET: ${{ secrets.REFRESH_TOKEN_SECRET }}
  SMTP_HOST: ${{ secrets.SMTP_HOST }}
  SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
  SMTP_PORT: ${{ secrets.SMTP_PORT }}
  SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
  PORT: 8080
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  VERCEL_SCOPE: open-decision
  NEXT_PUBLIC_OD_API_ENDPOINT: ${{format('https://pr-{0}-open-decision.fly.dev', github.event.pull_request.number)}}
  NEXT_PUBLIC_OD_WEBSOCKET_ENDPOINT: ${{format('wss://pr-{0}-open-decision.fly.dev', github.event.pull_request.number)}}
  OD_BUILDER_ENDPOINT: ${{format('https://open-decision-{0}.vercel.app', github.event.pull_request.number)}}
  NEXT_PUBLIC_OD_BUILDER_ENDPOINT: ${{format('https://open-decision-{0}.vercel.app', github.event.pull_request.number)}}

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Format and Lint

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup environment
        uses: ./.github/actions/setup

      - name: Format and Lint
        uses: ./.github/actions/lint

  typecheck:
    runs-on: ubuntu-latest
    name: Typecheck

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup environment
        uses: ./.github/actions/setup
      - name: Typecheck
        if: always()
        uses: ./.github/actions/typecheck

  preview_api:
    runs-on: ubuntu-latest
    name: "Deploy api"

    outputs:
      API_PREVIEW_URL: ${{ steps.deploy.outputs.url }}

    steps:
      - uses: actions/checkout@v2
      - name: Deploy
        id: deploy
        uses: PhilGarb/fly-pr-review-apps@2.5
        with:
          config: apps/api/fly.toml
          postgres: od-preview-db

  preview_builder:
    runs-on: ubuntu-latest
    name: "Deploy builder"

    outputs:
      PREVIEW_URL: ${{ steps.step1.outputs.PREVIEW_URL }}

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup environment
        uses: ./.github/actions/setup

      - name: Install Vercel CLI
        run: pnpm install -g vercel@latest
      - name: Set api endpoint end var
        continue-on-error: true
        run: |
          vercel env rm NEXT_PUBLIC_OD_API_ENDPOINT preview ${{ github.head_ref }} --token ${{secrets.VERCEL_TOKEN}} --yes || true
          echo ${{ env.NEXT_PUBLIC_OD_API_ENDPOINT }}|  vercel env add NEXT_PUBLIC_OD_API_ENDPOINT preview ${{ github.head_ref }} --token ${{secrets.VERCEL_TOKEN}}

      - name: Set api websocket endpoint env var
        continue-on-error: true
        run: |
          vercel env rm NEXT_PUBLIC_OD_WEBSOCKET_ENDPOINT preview ${{ github.head_ref }} --token ${{secrets.VERCEL_TOKEN}} --yes || true
          echo ${{ env.NEXT_PUBLIC_OD_WEBSOCKET_ENDPOINT }} | vercel env add NEXT_PUBLIC_OD_WEBSOCKET_ENDPOINT preview ${{ github.head_ref }} --token ${{secrets.VERCEL_TOKEN}}

      - name: Deploy to Vercel Action
        uses: PhilGarb/deploy-to-vercel-action@v1.9.8
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          ALIAS_DOMAINS: |
            {REPO}-{PR}.vercel.app
          PR_PREVIEW_DOMAIN: "{REPO}-{PR}.vercel.app"
          FORCE: true

  e2e_tests:
    name: Playwright tests
    runs-on: ubuntu-latest
    needs: [preview_builder, preview_api]
    env:
      DATABASE_URL: ${{secrets.DATABASE_URL_PROXIED}}

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup environment
        uses: ./.github/actions/setup

      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl proxy 5432 -a od-preview-db &
      - run: pnpx playwright install --with-deps
      - name: Run tests
        run: pnpm nx test:ci e2e
      - name: Deploy Result to Github Pages
        if: always()
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: apps/e2e/playwright-report
          clean: true
          clean-exclude: |
            vercel.json
